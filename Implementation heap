#include <iostream>

using namespace std;
class heap{
    public:
    int size;
    int arr[100];
    heap(){
      size=0;
      arr[0]=-1;
    }
    void insert(int val){
        size=size+1;
        int index=size;
        arr[index]=val;
        while(index>1){
            int parent=index/2;
            if(arr[parent]<arr[index]){
                int temp=arr[parent];
                arr[parent]=arr[index];
                arr[index]=temp;
                index=parent;
            }
            else{
                return;
            }
        }
    }
    void deleteheap(){
        if(size==0){
            cout<<"Nothing to delete"<<endl;
            return;
        }
        arr[1]=arr[size];
        size--;
        int j=1;
        while(j<size){
            int leftIndex=2*j;
            int rightIndex=2*j+1;
            if(leftIndex<size && (arr[leftIndex]>arr[j])){
                int temp=arr[j];
                arr[j]=arr[leftIndex];
                arr[leftIndex]=temp;
                j=leftIndex;
            }
            else if(rightIndex<size && (arr[rightIndex]>arr[j])){
                 int temp=arr[j];
                arr[j]=arr[rightIndex];
                arr[rightIndex]=temp;
                j=rightIndex;
            }
            else{
                return;
            }
        }
    }
    void print(){
        for(int i=1;i<=size;i++){
            cout<<arr[i]<<" ";
        }
        cout<<endl;
    }
};
int main()
{
   heap h;
   h.insert(50);
   h.insert(55);
   h.insert(53);
   h.insert(52);
   h.insert(54);
   h.deleteheap();
  h.print();
  
    return 0;
}
